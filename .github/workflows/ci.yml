name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GOTOOLCHAIN: local

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.20.x", "1.21.x", "stable"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
          
    - name: Generate manifest
      run: make manifest
      
    - name: Download dependencies
      run: make install
      
    - name: Run tests
      run: make test
      
    - name: Run tests with coverage
      run: make test-coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.x"
        cache: true
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.x"
        cache: true
          
    - name: Generate manifest
      run: make manifest
      
    - name: Download dependencies
      run: make install
      
    - name: Build binary
      run: make build
      
    - name: Test binary (Unix)
      if: runner.os != 'Windows'
      run: |
        ./build/claude-wm-cli version
        ./build/claude-wm-cli --help
        
    - name: Test binary (Windows)
      if: runner.os == 'Windows'
      run: |
        .\build\claude-wm-cli.exe version
        .\build\claude-wm-cli.exe --help

  cross-build:
    name: Cross-platform Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.x"
        cache: true
          
    - name: Generate manifest
      run: make manifest
      
    - name: Download dependencies
      run: make install
      
    - name: Build all platforms
      run: make build-all
      
    - name: Create packages
      run: make package
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: build/
        retention-days: 30