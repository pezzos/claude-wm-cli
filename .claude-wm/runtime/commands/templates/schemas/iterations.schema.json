{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "iterations.schema.json",
  "title": "Task Iterations Schema",
  "description": "Schema for validating task iteration data structure",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "pattern": "^.*/iterations\\.schema\\.json$",
      "description": "Reference to the JSON schema for validation"
    },
    "task_context": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string",
          "pattern": "^TASK-[0-9]{3}$",
          "description": "Task identifier in format TASK-XXX"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Task title"
        },
        "current_iteration": {
          "type": "integer",
          "minimum": 1,
          "description": "Current iteration number"
        },
        "max_iterations": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum allowed iterations"
        },
        "status": {
          "type": "string",
          "enum": ["in_progress", "completed", "failed", "blocked"]
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 datetime when task started"
        }
      },
      "required": ["task_id", "title", "current_iteration", "max_iterations", "status", "started_at"],
      "additionalProperties": false
    },
    "iterations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "iteration_number": {
            "type": "integer",
            "minimum": 1
          },
          "attempt": {
            "type": "object",
            "properties": {
              "started_at": {
                "type": "string",
                "format": "date-time"
              },
              "approach": {
                "type": "string",
                "minLength": 1,
                "description": "Approach taken for this iteration"
              },
              "implementation": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1
                },
                "minItems": 1,
                "description": "Implementation steps taken"
              }
            },
            "required": ["started_at", "approach", "implementation"],
            "additionalProperties": false
          },
          "result": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean"
              },
              "outcome": {
                "type": "string",
                "enum": ["‚úÖ Success", "‚ùå Failed", "üöß In Progress"]
              },
              "details": {
                "type": "string",
                "minLength": 1
              },
              "error": {
                "type": "string",
                "description": "Error details if failed"
              },
              "root_cause": {
                "type": "string",
                "description": "Root cause analysis if failed"
              },
              "tests_passed": {
                "type": "boolean",
                "description": "Whether tests passed (if applicable)"
              },
              "security_review": {
                "type": "string",
                "description": "Security review status (if applicable)"
              }
            },
            "required": ["success", "outcome", "details"],
            "additionalProperties": false
          },
          "learnings": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "minItems": 1,
            "description": "Key learnings from this iteration"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 datetime when iteration completed"
          }
        },
        "required": ["iteration_number", "attempt", "result", "learnings", "completed_at"],
        "additionalProperties": false
      },
      "minItems": 1
    },
    "final_outcome": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["completed", "failed", "blocked", "in_progress"]
        },
        "solution": {
          "type": "string",
          "minLength": 1,
          "description": "Final solution description"
        },
        "total_time_hours": {
          "type": "number",
          "minimum": 0,
          "description": "Total time spent in hours"
        },
        "complexity": {
          "type": "string",
          "enum": ["lower_than_estimated", "as_estimated", "higher_than_estimated"]
        },
        "original_estimate_hours": {
          "type": "number",
          "minimum": 0,
          "description": "Original time estimate in hours"
        }
      },
      "required": ["status", "solution", "total_time_hours", "complexity", "original_estimate_hours"],
      "additionalProperties": false
    },
    "recommendations": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "minItems": 1,
      "description": "Recommendations for future similar tasks"
    }
  },
  "required": ["$schema", "task_context", "iterations", "final_outcome", "recommendations"],
  "additionalProperties": false
}